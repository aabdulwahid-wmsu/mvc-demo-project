@model AyzMVC.Areas.Security.Models.UserViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <header class="row content-header head-margin">
        <div class="col-md-6">
            <h2>Edit User</h2>
        </div>
        <div class="col-md-6 content-action text-right">
            <a href="@Url.Action("Index")" class="btn btn-default">
                <span class="glyphicon glyphicon-arrow-left"></span>
                Cancel
            </a>
            <button type="submit" value="Save" class="btn btn-success" />
            <span class="glyphicon glyphicon-ok"></span>
            Update
        </div>
    </header>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
         @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 radio-margin">
            @Html.RadioButtonFor(model => model.Gender, "Male", new { Gender = "Male" })
            Male
            @Html.RadioButtonFor(model => model.Gender, "Female", new { Gender = "Female" })
            Female
            @Html.RadioButtonFor(model => model.Gender, "Other", new { Gender = "Other" })
            Other
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmploymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmploymentDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmploymentDate, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
